// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data.proto

/*
Package stream is a generated protocol buffer package.

It is generated from these files:
	data.proto

It has these top-level messages:
	InputPrice
	PredictedPrice
*/
package stream

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InputPrice struct {
	Datetime string  `protobuf:"bytes,1,opt,name=datetime" json:"datetime,omitempty"`
	Close    float32 `protobuf:"fixed32,2,opt,name=close" json:"close,omitempty"`
	Symbol   string  `protobuf:"bytes,3,opt,name=symbol" json:"symbol,omitempty"`
}

func (m *InputPrice) Reset()                    { *m = InputPrice{} }
func (m *InputPrice) String() string            { return proto.CompactTextString(m) }
func (*InputPrice) ProtoMessage()               {}
func (*InputPrice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *InputPrice) GetDatetime() string {
	if m != nil {
		return m.Datetime
	}
	return ""
}

func (m *InputPrice) GetClose() float32 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *InputPrice) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

type PredictedPrice struct {
	Datetime string  `protobuf:"bytes,1,opt,name=datetime" json:"datetime,omitempty"`
	Price    float32 `protobuf:"fixed32,2,opt,name=price" json:"price,omitempty"`
	Symbol   string  `protobuf:"bytes,3,opt,name=symbol" json:"symbol,omitempty"`
}

func (m *PredictedPrice) Reset()                    { *m = PredictedPrice{} }
func (m *PredictedPrice) String() string            { return proto.CompactTextString(m) }
func (*PredictedPrice) ProtoMessage()               {}
func (*PredictedPrice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PredictedPrice) GetDatetime() string {
	if m != nil {
		return m.Datetime
	}
	return ""
}

func (m *PredictedPrice) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *PredictedPrice) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func init() {
	proto.RegisterType((*InputPrice)(nil), "stream.InputPrice")
	proto.RegisterType((*PredictedPrice)(nil), "stream.PredictedPrice")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RoutePrice service

type RoutePriceClient interface {
	TraversePrice(ctx context.Context, in *InputPrice, opts ...grpc.CallOption) (*PredictedPrice, error)
}

type routePriceClient struct {
	cc *grpc.ClientConn
}

func NewRoutePriceClient(cc *grpc.ClientConn) RoutePriceClient {
	return &routePriceClient{cc}
}

func (c *routePriceClient) TraversePrice(ctx context.Context, in *InputPrice, opts ...grpc.CallOption) (*PredictedPrice, error) {
	out := new(PredictedPrice)
	err := grpc.Invoke(ctx, "/stream.RoutePrice/TraversePrice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RoutePrice service

type RoutePriceServer interface {
	TraversePrice(context.Context, *InputPrice) (*PredictedPrice, error)
}

func RegisterRoutePriceServer(s *grpc.Server, srv RoutePriceServer) {
	s.RegisterService(&_RoutePrice_serviceDesc, srv)
}

func _RoutePrice_TraversePrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InputPrice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutePriceServer).TraversePrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stream.RoutePrice/TraversePrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutePriceServer).TraversePrice(ctx, req.(*InputPrice))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoutePrice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stream.RoutePrice",
	HandlerType: (*RoutePriceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TraversePrice",
			Handler:    _RoutePrice_TraversePrice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "data.proto",
}

func init() { proto.RegisterFile("data.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x49, 0x2c, 0x49,
	0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2b, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0x55, 0x0a,
	0xe3, 0xe2, 0xf2, 0xcc, 0x2b, 0x28, 0x2d, 0x09, 0x28, 0xca, 0x4c, 0x4e, 0x15, 0x92, 0xe2, 0xe2,
	0x48, 0x49, 0x2c, 0x49, 0x2d, 0xc9, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82,
	0xf3, 0x85, 0x44, 0xb8, 0x58, 0x93, 0x73, 0xf2, 0x8b, 0x53, 0x25, 0x98, 0x14, 0x18, 0x35, 0x98,
	0x82, 0x20, 0x1c, 0x21, 0x31, 0x2e, 0xb6, 0xe2, 0xca, 0xdc, 0xa4, 0xfc, 0x1c, 0x09, 0x66, 0xb0,
	0x7a, 0x28, 0x4f, 0x29, 0x8a, 0x8b, 0x2f, 0xa0, 0x28, 0x35, 0x25, 0x33, 0xb9, 0x24, 0x35, 0x85,
	0x28, 0xb3, 0x0b, 0x40, 0x8a, 0x60, 0x66, 0x83, 0x39, 0xb8, 0xcc, 0x36, 0xf2, 0xe6, 0xe2, 0x0a,
	0xca, 0x2f, 0x2d, 0x49, 0x85, 0x98, 0x6b, 0xcb, 0xc5, 0x1b, 0x52, 0x94, 0x58, 0x96, 0x5a, 0x54,
	0x0c, 0x15, 0x10, 0xd2, 0x83, 0xf8, 0x4d, 0x0f, 0xe1, 0x31, 0x29, 0x31, 0x98, 0x18, 0xaa, 0xa3,
	0x94, 0x18, 0x92, 0xd8, 0xc0, 0xe1, 0x61, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x89, 0x96, 0x42,
	0x57, 0x1d, 0x01, 0x00, 0x00,
}
